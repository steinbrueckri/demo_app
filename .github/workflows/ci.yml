name: CI

# TODO: Add CodeQL in CI Job

on:
  push:

env:
  JAVA_VERSION: '15'
  IMAGE_REGISTRY: 'steinbrueckri'
jobs:
  build:
    name: Application Build using Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1.4.2
        with:
          java-version: '${{ env.JAVA_VERSION }}'

      - name: Setup Cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven

      - name: Build app binary
        run: |
          # read application version from pom.xml
          echo "VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "APP_NAME=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.name -q -DforceStdout)" >> $GITHUB_ENV

          # run maven to build a native binary
          mvn package -Pnative -Dquarkus.native.container-build=true

      - name: Build container image
        run: |
          # application and image build using docker
          docker build . -f src/main/docker/Dockerfile.native -t ${IMAGE_REGISTRY}/${APP_NAME}:${VERSION}

          # TODO: PUSH IT!
          echo "${IMAGE_REGISTRY}/${APP_NAME}:${VERSION}"

      - name: Tag and push Docker image
        if: github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          # docker create latest tag
          docker tag ${IMAGE_REGISTRY}/${APP_NAME}:${VERSION} ${IMAGE_REGISTRY}/${APP_NAME}:latest
          # docker push images
          docker push ${IMAGE_REGISTRY}/${APP_NAME}
